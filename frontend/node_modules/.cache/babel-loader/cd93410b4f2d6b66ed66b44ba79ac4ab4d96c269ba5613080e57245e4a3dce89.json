{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\n\n// Create an axios instance with default configuration\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token in all authenticated requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Course API Services\nexport const courseService = {\n  // Generate a course\n  generateCourse: async (topic, experienceLevel, availableTime) => {\n    try {\n      const response = await api.post('/generate-course', {\n        topic,\n        experience_level: experienceLevel,\n        available_time: availableTime\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data, _error$response2$data2, _error$response3, _error$response3$data, _error$response3$data2, _error$response4, _error$response4$data;\n      // Para 403 con need_upgrade, queremos pasar todos los detalles del error\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && (_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && (_error$response2$data2 = _error$response2$data.detail) !== null && _error$response2$data2 !== void 0 && _error$response2$data2.need_upgrade) {\n        throw {\n          ...error.response.data.detail,\n          isSubscriptionLimitError: true\n        };\n      }\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : (_error$response3$data2 = _error$response3$data.detail) === null || _error$response3$data2 === void 0 ? void 0 : _error$response3$data2.message) || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to generate course');\n    }\n  },\n  // Save a course\n  saveCourse: async courseData => {\n    try {\n      const response = await api.post('/save-course', courseData);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || 'Failed to save course');\n    }\n  },\n  // Get all courses for current user\n  getCourses: async () => {\n    try {\n      const response = await api.get('/courses');\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || 'Failed to fetch courses');\n    }\n  },\n  // Get a specific course by ID\n  getCourse: async courseId => {\n    try {\n      const response = await api.get(`/courses/${courseId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      throw new Error(((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.detail) || 'Failed to fetch course');\n    }\n  },\n  // Delete a course\n  deleteCourse: async courseId => {\n    try {\n      const response = await api.delete(`/courses/${courseId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response8, _error$response8$data;\n      throw new Error(((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.detail) || 'Failed to delete course');\n    }\n  },\n  // Solicitar un reemplazo para un tema que ya conoces\n  requestTopicReplacement: async requestData => {\n    try {\n      const response = await api.post('/replace-topic', requestData);\n      return response.data;\n    } catch (error) {\n      var _error$response9, _error$response9$data;\n      throw new Error(((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.detail) || 'Failed to get topic replacement');\n    }\n  },\n  // Solicitar un reemplazo para un mÃ³dulo que ya conoces\n  requestModuleReplacement: async requestData => {\n    try {\n      const response = await api.post('/replace-module', requestData);\n      return response.data;\n    } catch (error) {\n      var _error$response0, _error$response0$data;\n      throw new Error(((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.detail) || 'Failed to get module replacement');\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","courseService","generateCourse","topic","experienceLevel","availableTime","response","post","experience_level","available_time","data","_error$response","_error$response2","_error$response2$data","_error$response2$data2","_error$response3","_error$response3$data","_error$response3$data2","_error$response4","_error$response4$data","status","detail","need_upgrade","isSubscriptionLimitError","Error","message","saveCourse","courseData","_error$response5","_error$response5$data","getCourses","get","_error$response6","_error$response6$data","getCourse","courseId","_error$response7","_error$response7$data","deleteCourse","delete","_error$response8","_error$response8$data","requestTopicReplacement","requestData","_error$response9","_error$response9$data","requestModuleReplacement","_error$response0","_error$response0$data"],"sources":["C:/Users/salds/OneDrive/Documentos/Promt2Course/Skills-Hub/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n// Create an axios instance with default configuration\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to include auth token in all authenticated requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Course API Services\r\nexport const courseService = {\r\n  // Generate a course\r\n  generateCourse: async (topic, experienceLevel, availableTime) => {\r\n    try {\r\n      const response = await api.post('/generate-course', {\r\n        topic,\r\n        experience_level: experienceLevel,\r\n        available_time: availableTime,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      // Para 403 con need_upgrade, queremos pasar todos los detalles del error\r\n      if (error.response?.status === 403 && error.response?.data?.detail?.need_upgrade) {\r\n        throw { ...error.response.data.detail, isSubscriptionLimitError: true };\r\n      }\r\n      throw new Error(error.response?.data?.detail?.message || error.response?.data?.detail || 'Failed to generate course');\r\n    }\r\n  },\r\n  \r\n  // Save a course\r\n  saveCourse: async (courseData) => {\r\n    try {\r\n      const response = await api.post('/save-course', courseData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to save course');\r\n    }\r\n  },\r\n  \r\n  // Get all courses for current user\r\n  getCourses: async () => {\r\n    try {\r\n      const response = await api.get('/courses');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to fetch courses');\r\n    }\r\n  },\r\n  \r\n  // Get a specific course by ID\r\n  getCourse: async (courseId) => {\r\n    try {\r\n      const response = await api.get(`/courses/${courseId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to fetch course');\r\n    }\r\n  },\r\n  \r\n  // Delete a course\r\n  deleteCourse: async (courseId) => {\r\n    try {\r\n      const response = await api.delete(`/courses/${courseId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to delete course');\r\n    }\r\n  },\r\n  \r\n  // Solicitar un reemplazo para un tema que ya conoces\r\n  requestTopicReplacement: async (requestData) => {\r\n    try {\r\n      const response = await api.post('/replace-topic', requestData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to get topic replacement');\r\n    }\r\n  },\r\n  \r\n  // Solicitar un reemplazo para un mÃ³dulo que ya conoces\r\n  requestModuleReplacement: async (requestData) => {\r\n    try {\r\n      const response = await api.post('/replace-module', requestData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.detail || 'Failed to get module replacement');\r\n    }\r\n  },\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}