{"ast":null,"code":"var _jsxFileName = \"/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/components/TextScramble.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextScramble = ({\n  text,\n  delay = 0,\n  duration = 2000,\n  className\n}) => {\n  _s();\n  const [output, setOutput] = useState('');\n  const [isAnimating, setIsAnimating] = useState(false);\n  const timeoutRef = useRef(null);\n  const chars = '!<>-_\\\\/[]{}—=+*^?#_abcdefghijklmnopqrstuvwxyz';\n  useEffect(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    timeoutRef.current = setTimeout(() => {\n      scramble();\n    }, delay);\n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    };\n  }, [text, delay]);\n  const scramble = () => {\n    setIsAnimating(true);\n    let iteration = 0;\n    const finalText = text;\n    const maxIterations = 30;\n    const frameRate = Math.floor(duration / maxIterations);\n    const updateText = () => {\n      if (iteration >= maxIterations) {\n        setOutput(finalText);\n        setIsAnimating(false);\n        return;\n      }\n      const progress = iteration / maxIterations;\n      const completeLength = Math.floor(finalText.length * progress);\n      let outputText = '';\n      for (let i = 0; i < finalText.length; i++) {\n        if (i < completeLength) {\n          outputText += finalText[i];\n        } else if (finalText[i] === ' ') {\n          outputText += ' ';\n        } else {\n          outputText += chars[Math.floor(Math.random() * chars.length)];\n        }\n      }\n      setOutput(outputText);\n      iteration++;\n      setTimeout(updateText, frameRate);\n    };\n    updateText();\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: output || text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TextScramble, \"MYK2jnTr7qO7Inn5hyv7cY+sxpg=\");\n_c = TextScramble;\nexport default TextScramble;\nvar _c;\n$RefreshReg$(_c, \"TextScramble\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","TextScramble","text","delay","duration","className","_s","output","setOutput","isAnimating","setIsAnimating","timeoutRef","chars","current","clearTimeout","setTimeout","scramble","iteration","finalText","maxIterations","frameRate","Math","floor","updateText","progress","completeLength","length","outputText","i","random","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/components/TextScramble.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nconst TextScramble = ({ text, delay = 0, duration = 2000, className }) => {\n  const [output, setOutput] = useState('');\n  const [isAnimating, setIsAnimating] = useState(false);\n  const timeoutRef = useRef(null);\n  \n  const chars = '!<>-_\\\\/[]{}—=+*^?#_abcdefghijklmnopqrstuvwxyz';\n  \n  useEffect(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    \n    timeoutRef.current = setTimeout(() => {\n      scramble();\n    }, delay);\n    \n    return () => {\n      if (timeoutRef.current) clearTimeout(timeoutRef.current);\n    };\n  }, [text, delay]);\n  \n  const scramble = () => {\n    setIsAnimating(true);\n    \n    let iteration = 0;\n    const finalText = text;\n    const maxIterations = 30;\n    const frameRate = Math.floor(duration / maxIterations);\n    \n    const updateText = () => {\n      if (iteration >= maxIterations) {\n        setOutput(finalText);\n        setIsAnimating(false);\n        return;\n      }\n      \n      const progress = iteration / maxIterations;\n      const completeLength = Math.floor(finalText.length * progress);\n      \n      let outputText = '';\n      for (let i = 0; i < finalText.length; i++) {\n        if (i < completeLength) {\n          outputText += finalText[i];\n        } else if (finalText[i] === ' ') {\n          outputText += ' ';\n        } else {\n          outputText += chars[Math.floor(Math.random() * chars.length)];\n        }\n      }\n      \n      setOutput(outputText);\n      iteration++;\n      \n      setTimeout(updateText, frameRate);\n    };\n    \n    updateText();\n  };\n  \n  return (\n    <span className={className}>\n      {output || text}\n    </span>\n  );\n};\n\nexport default TextScramble; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK,GAAG,CAAC;EAAEC,QAAQ,GAAG,IAAI;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMc,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC;EAE/B,MAAMc,KAAK,GAAG,gDAAgD;EAE9DhB,SAAS,CAAC,MAAM;IACd,IAAIe,UAAU,CAACE,OAAO,EAAEC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC;IAExDF,UAAU,CAACE,OAAO,GAAGE,UAAU,CAAC,MAAM;MACpCC,QAAQ,CAAC,CAAC;IACZ,CAAC,EAAEb,KAAK,CAAC;IAET,OAAO,MAAM;MACX,IAAIQ,UAAU,CAACE,OAAO,EAAEC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC;IAC1D,CAAC;EACH,CAAC,EAAE,CAACX,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB,MAAMa,QAAQ,GAAGA,CAAA,KAAM;IACrBN,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAIO,SAAS,GAAG,CAAC;IACjB,MAAMC,SAAS,GAAGhB,IAAI;IACtB,MAAMiB,aAAa,GAAG,EAAE;IACxB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAClB,QAAQ,GAAGe,aAAa,CAAC;IAEtD,MAAMI,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAIN,SAAS,IAAIE,aAAa,EAAE;QAC9BX,SAAS,CAACU,SAAS,CAAC;QACpBR,cAAc,CAAC,KAAK,CAAC;QACrB;MACF;MAEA,MAAMc,QAAQ,GAAGP,SAAS,GAAGE,aAAa;MAC1C,MAAMM,cAAc,GAAGJ,IAAI,CAACC,KAAK,CAACJ,SAAS,CAACQ,MAAM,GAAGF,QAAQ,CAAC;MAE9D,IAAIG,UAAU,GAAG,EAAE;MACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,SAAS,CAACQ,MAAM,EAAEE,CAAC,EAAE,EAAE;QACzC,IAAIA,CAAC,GAAGH,cAAc,EAAE;UACtBE,UAAU,IAAIT,SAAS,CAACU,CAAC,CAAC;QAC5B,CAAC,MAAM,IAAIV,SAAS,CAACU,CAAC,CAAC,KAAK,GAAG,EAAE;UAC/BD,UAAU,IAAI,GAAG;QACnB,CAAC,MAAM;UACLA,UAAU,IAAIf,KAAK,CAACS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACQ,MAAM,CAAC,CAAC,GAAGjB,KAAK,CAACc,MAAM,CAAC,CAAC;QAC/D;MACF;MAEAlB,SAAS,CAACmB,UAAU,CAAC;MACrBV,SAAS,EAAE;MAEXF,UAAU,CAACQ,UAAU,EAAEH,SAAS,CAAC;IACnC,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACEvB,OAAA;IAAMK,SAAS,EAAEA,SAAU;IAAAyB,QAAA,EACxBvB,MAAM,IAAIL;EAAI;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEX,CAAC;AAAC5B,EAAA,CA9DIL,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAgElB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}