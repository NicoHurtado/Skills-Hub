{"ast":null,"code":"var _jsxFileName = \"/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Intentar obtener el tema desde localStorage, si no existe usar 'dark'\n  const [theme, setTheme] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'dark';\n  });\n\n  // Al cambiar el tema, actualizar localStorage y clases CSS\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n\n    // Actualizar la clase en el elemento HTML\n    const htmlElement = document.documentElement;\n    if (theme === 'dark') {\n      htmlElement.classList.add('dark');\n      htmlElement.classList.remove('light');\n    } else {\n      htmlElement.classList.add('light');\n      htmlElement.classList.remove('dark');\n    }\n  }, [theme]);\n\n  // Función para alternar entre temas\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'dark' ? 'light' : 'dark');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook personalizado para usar el tema\n_s(ThemeProvider, \"4ztFcFgFc5FHan3+vnX7FKFmzeg=\");\n_c = ThemeProvider;\nexport const useTheme = () => {\n  _s2();\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s2(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","savedTheme","localStorage","getItem","setItem","htmlElement","document","documentElement","classList","add","remove","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useTheme","_s2","context","undefined","Error","$RefreshReg$"],"sources":["/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  // Intentar obtener el tema desde localStorage, si no existe usar 'dark'\n  const [theme, setTheme] = useState(() => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme || 'dark';\n  });\n\n  // Al cambiar el tema, actualizar localStorage y clases CSS\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n    \n    // Actualizar la clase en el elemento HTML\n    const htmlElement = document.documentElement;\n    if (theme === 'dark') {\n      htmlElement.classList.add('dark');\n      htmlElement.classList.remove('light');\n    } else {\n      htmlElement.classList.add('light');\n      htmlElement.classList.remove('dark');\n    }\n  }, [theme]);\n\n  // Función para alternar entre temas\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'dark' ? 'light' : 'dark');\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\n// Hook personalizado para usar el tema\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport default ThemeContext; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,MAAM;IACvC,MAAMW,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,OAAOF,UAAU,IAAI,MAAM;EAC7B,CAAC,CAAC;;EAEF;EACAV,SAAS,CAAC,MAAM;IACdW,YAAY,CAACE,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;;IAEpC;IACA,MAAMM,WAAW,GAAGC,QAAQ,CAACC,eAAe;IAC5C,IAAIR,KAAK,KAAK,MAAM,EAAE;MACpBM,WAAW,CAACG,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MACjCJ,WAAW,CAACG,SAAS,CAACE,MAAM,CAAC,OAAO,CAAC;IACvC,CAAC,MAAM;MACLL,WAAW,CAACG,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;MAClCJ,WAAW,CAACG,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACtC;EACF,CAAC,EAAE,CAACX,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBX,QAAQ,CAACY,SAAS,IAAIA,SAAS,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAC;EAChE,CAAC;EAED,oBACElB,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,KAAK;MAAEY;IAAY,CAAE;IAAAd,QAAA,EAClDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;;AAED;AAAApB,EAAA,CAlCaF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAmC1B,OAAO,MAAMwB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,OAAO,GAAG9B,UAAU,CAACG,YAAY,CAAC;EACxC,IAAI2B,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOF,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,QAAQ;AAQrB,eAAezB,YAAY;AAAC,IAAAwB,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}