{"ast":null,"code":"var _jsxFileName = \"/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/components/BackgroundGrid.js\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundGrid = ({\n  className = '',\n  dotSize = 1,\n  dotSpacing = 20,\n  dotColor = 'rgba(80, 80, 220, 0.15)',\n  animated = true\n}) => {\n  // Calculate the number of dots needed based on spacing\n  const calculateDots = () => {\n    if (typeof window === 'undefined') return {\n      rows: 30,\n      cols: 50\n    };\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const cols = Math.ceil(width / dotSpacing) + 1;\n    const rows = Math.ceil(height / dotSpacing) + 1;\n    return {\n      rows,\n      cols\n    };\n  };\n  const {\n    rows,\n    cols\n  } = calculateDots();\n  const renderDots = () => {\n    const dots = [];\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < cols; col++) {\n        const key = `${row}-${col}`;\n        const x = col * dotSpacing;\n        const y = row * dotSpacing;\n        const delayFactor = (row + col) * 0.01;\n        if (animated) {\n          dots.push(/*#__PURE__*/_jsxDEV(motion.circle, {\n            cx: x,\n            cy: y,\n            r: dotSize,\n            fill: dotColor,\n            initial: {\n              opacity: 0,\n              scale: 0\n            },\n            animate: {\n              opacity: 1,\n              scale: [0, 1.5, 1]\n            },\n            transition: {\n              duration: 2,\n              delay: delayFactor,\n              ease: \"easeOut\"\n            }\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this));\n        } else {\n          dots.push(/*#__PURE__*/_jsxDEV(\"circle\", {\n            cx: x,\n            cy: y,\n            r: dotSize,\n            fill: dotColor\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this));\n        }\n      }\n    }\n    return dots;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `absolute inset-0 overflow-hidden pointer-events-none ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"absolute w-full h-full\",\n      style: {\n        minWidth: '100%',\n        minHeight: '100%'\n      },\n      children: renderDots()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_c = BackgroundGrid;\nexport default BackgroundGrid;\nvar _c;\n$RefreshReg$(_c, \"BackgroundGrid\");","map":{"version":3,"names":["React","motion","jsxDEV","_jsxDEV","BackgroundGrid","className","dotSize","dotSpacing","dotColor","animated","calculateDots","window","rows","cols","width","innerWidth","height","innerHeight","Math","ceil","renderDots","dots","row","col","key","x","y","delayFactor","push","circle","cx","cy","r","fill","initial","opacity","scale","animate","transition","duration","delay","ease","fileName","_jsxFileName","lineNumber","columnNumber","children","style","minWidth","minHeight","_c","$RefreshReg$"],"sources":["/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/components/BackgroundGrid.js"],"sourcesContent":["import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst BackgroundGrid = ({ \n  className = '', \n  dotSize = 1,\n  dotSpacing = 20,\n  dotColor = 'rgba(80, 80, 220, 0.15)',\n  animated = true\n}) => {\n  // Calculate the number of dots needed based on spacing\n  const calculateDots = () => {\n    if (typeof window === 'undefined') return { rows: 30, cols: 50 };\n    \n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    \n    const cols = Math.ceil(width / dotSpacing) + 1;\n    const rows = Math.ceil(height / dotSpacing) + 1;\n    \n    return { rows, cols };\n  };\n  \n  const { rows, cols } = calculateDots();\n  \n  const renderDots = () => {\n    const dots = [];\n    \n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < cols; col++) {\n        const key = `${row}-${col}`;\n        const x = col * dotSpacing;\n        const y = row * dotSpacing;\n        \n        const delayFactor = (row + col) * 0.01;\n        \n        if (animated) {\n          dots.push(\n            <motion.circle\n              key={key}\n              cx={x}\n              cy={y}\n              r={dotSize}\n              fill={dotColor}\n              initial={{ opacity: 0, scale: 0 }}\n              animate={{ \n                opacity: 1, \n                scale: [0, 1.5, 1],\n              }}\n              transition={{ \n                duration: 2, \n                delay: delayFactor,\n                ease: \"easeOut\" \n              }}\n            />\n          );\n        } else {\n          dots.push(\n            <circle\n              key={key}\n              cx={x}\n              cy={y}\n              r={dotSize}\n              fill={dotColor}\n            />\n          );\n        }\n      }\n    }\n    \n    return dots;\n  };\n  \n  return (\n    <div className={`absolute inset-0 overflow-hidden pointer-events-none ${className}`}>\n      <svg \n        className=\"absolute w-full h-full\"\n        style={{ \n          minWidth: '100%', \n          minHeight: '100%',\n        }}\n      >\n        {renderDots()}\n      </svg>\n    </div>\n  );\n};\n\nexport default BackgroundGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}