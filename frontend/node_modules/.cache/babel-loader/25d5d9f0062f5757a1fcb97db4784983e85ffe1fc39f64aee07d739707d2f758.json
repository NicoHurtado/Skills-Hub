{"ast":null,"code":"var _jsxFileName = \"/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/context/ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Estado para el tema\n  const [darkMode, setDarkMode] = useState(() => {\n    // Verificar si hay un tema guardado en localStorage\n    const savedTheme = localStorage.getItem('theme');\n    // También verificar la preferencia del sistema\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    // Si hay un tema guardado, usarlo; si no, usar la preferencia del sistema\n    if (savedTheme) {\n      return savedTheme === 'dark';\n    } else {\n      return prefersDark;\n    }\n  });\n\n  // Cambiar entre tema oscuro y claro\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n\n  // Función para establecer el tema específicamente\n  const setTheme = isDark => {\n    setDarkMode(isDark);\n  };\n\n  // Observar cambios en la preferencia del sistema\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      // Solo cambiar automáticamente si el usuario no ha establecido una preferencia\n      if (!localStorage.getItem('theme')) {\n        setDarkMode(mediaQuery.matches);\n      }\n    };\n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  // Aplicar el tema cuando cambie\n  useEffect(() => {\n    const theme = darkMode ? 'dark' : 'light';\n    localStorage.setItem('theme', theme);\n\n    // Aplicar la clase al elemento html para que los estilos se apliquen globalmente\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleDarkMode,\n      setTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"CS5v09oMYv5aW+LpbGomsbwqL9I=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","toggleDarkMode","prevMode","setTheme","isDark","mediaQuery","handleChange","addEventListener","removeEventListener","theme","setItem","document","documentElement","classList","add","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nicolashurtadoa/Downloads/Skills-Hub/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  // Estado para el tema\n  const [darkMode, setDarkMode] = useState(() => {\n    // Verificar si hay un tema guardado en localStorage\n    const savedTheme = localStorage.getItem('theme');\n    // También verificar la preferencia del sistema\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    \n    // Si hay un tema guardado, usarlo; si no, usar la preferencia del sistema\n    if (savedTheme) {\n      return savedTheme === 'dark';\n    } else {\n      return prefersDark;\n    }\n  });\n\n  // Cambiar entre tema oscuro y claro\n  const toggleDarkMode = () => {\n    setDarkMode(prevMode => !prevMode);\n  };\n\n  // Función para establecer el tema específicamente\n  const setTheme = (isDark) => {\n    setDarkMode(isDark);\n  };\n\n  // Observar cambios en la preferencia del sistema\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    const handleChange = () => {\n      // Solo cambiar automáticamente si el usuario no ha establecido una preferencia\n      if (!localStorage.getItem('theme')) {\n        setDarkMode(mediaQuery.matches);\n      }\n    };\n    \n    mediaQuery.addEventListener('change', handleChange);\n    return () => mediaQuery.removeEventListener('change', handleChange);\n  }, []);\n\n  // Aplicar el tema cuando cambie\n  useEffect(() => {\n    const theme = darkMode ? 'dark' : 'light';\n    localStorage.setItem('theme', theme);\n    \n    // Aplicar la clase al elemento html para que los estilos se apliquen globalmente\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  }, [darkMode]);\n\n  return (\n    <ThemeContext.Provider value={{ darkMode, toggleDarkMode, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC7C;IACA,MAAMU,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD;IACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;;IAE7E;IACA,IAAIN,UAAU,EAAE;MACd,OAAOA,UAAU,KAAK,MAAM;IAC9B,CAAC,MAAM;MACL,OAAOG,WAAW;IACpB;EACF,CAAC,CAAC;;EAEF;EACA,MAAMI,cAAc,GAAGA,CAAA,KAAM;IAC3BR,WAAW,CAACS,QAAQ,IAAI,CAACA,QAAQ,CAAC;EACpC,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAIC,MAAM,IAAK;IAC3BX,WAAW,CAACW,MAAM,CAAC;EACrB,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACd,MAAMoB,UAAU,GAAGP,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC;IACpE,MAAMO,YAAY,GAAGA,CAAA,KAAM;MACzB;MACA,IAAI,CAACX,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;QAClCH,WAAW,CAACY,UAAU,CAACL,OAAO,CAAC;MACjC;IACF,CAAC;IAEDK,UAAU,CAACE,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IACnD,OAAO,MAAMD,UAAU,CAACG,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;EACrE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArB,SAAS,CAAC,MAAM;IACd,MAAMwB,KAAK,GAAGjB,QAAQ,GAAG,MAAM,GAAG,OAAO;IACzCG,YAAY,CAACe,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;;IAEpC;IACA,IAAIjB,QAAQ,EAAE;MACZmB,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;EACF,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACC,YAAY,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,QAAQ;MAAES,cAAc;MAAEE;IAAS,CAAE;IAAAb,QAAA,EAClEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAAC9B,EAAA,CA1DWF,aAAa;AAAAiC,EAAA,GAAbjC,aAAa;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}